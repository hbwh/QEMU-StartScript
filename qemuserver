#!/bin/sh
# /etc/init.d/qemuserver
# version 2015-04-08
 
### BEGIN INIT INFO
# Provides:         qemuserver
# Required-Start:   $local_fs $remote_fs
# Required-Stop:    $local_fs $remote_fs
# Should-Start:     $network
# Should-Stop:      $network
# Default-Start:    2 3 4 5
# Default-Stop:     0 1 6
# Short-Description:qemu server
# Description:      Start the qemu server
### END INIT INFO
 
#Settings
Service=w2k398m
Type=system-i386
VNCPassword=123456
Mem=256
ImgPath=/srv/vm
MonitorPort=7100
VNCDisplay=0

Drive="-drive file=${ImgPath}/os,index=0,media=disk,cache=writeback \
 -drive file=${ImgPath}/data,index=1,media=disk,cache=writeback"

Options="-name $Service -m $Mem -display vnc=:${VNCDisplay},password \
 -monitor telnet:localhost:${MonitorPort},server,nowait,nodelay $Drive \
 -usbdevice tablet -localtime -net nic,model=virtio -net user -daemonize"

Service_start() {
  if pgrep -f "name $Service" > /dev/null
  then
    echo "$Service is run！"
  else
    echo "Start $Service..."
    /usr/bin/qemu-$Type \
 -name $Service -m $Mem $Drive -display vnc=:${VNCDisplay},password \
 -monitor telnet:localhost:${MonitorPort},server,nowait,nodelay \
 -usbdevice tablet -localtime -net nic,model=virtio -net user -daemonize
    sleep 3
    if pgrep -f "name $Service" > /dev/null
      then
        echo "set_password vnc $VNCPassword" | nc localhost $MonitorPort
        echo "$Service is run now!"
      else
        echo "Error! Can not start $Service！"
    fi
  fi
}
 
Service_halt() {
  if pgrep -f "name $Service" > /dev/null
  then
    echo 'system_powerdown' | nc localhost $MonitorPort
    sync && sleep 10
  else
    echo "$Service is not run!"
  fi
  if pgrep -f "name $Service" > /dev/null
  then
    echo "Error! $Service is not halt."
  else
    echo "$Service is halt."
  fi
}

Service_stop() {
  if pgrep -f "name $Service" > /dev/null
  then
    kill -s 9 `pgrep -f "name $Service"`
    echo "$Service is stop!"
  else
    echo "$Service is not run!"
  fi
}

#Start-Stop here
case "$1" in
  start)
        Service_start
        ;;
  halt)
        Service_halt
        ;;
  stop)
        Service_stop
        ;;
  *)
        echo "Usage: $0 {start|stop|halt}" >&2
        exit 1
        ;;
esac

exit 0